package pokeClone;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.ArrayList;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.Timer;

public class Game {
	// Global Constants
	public static final int FIELD_WIDTH = 600;
	public static final int FIELD_HEIGHT = 400;

	// Local Constants
	private final int TIMER_SPEED = 10;
	private final int TIMER_DELAY = 750;

	private JFrame gameFrame;
	private Timer timer;

	private static boolean esc = false;
	private static int time = 0;
	// These Images could be loaded without the use of the 'getClass' and
	// 'getResource'
	// methods, but using those two methods allows all of the files that make up
	// this
	// program (the .CLASS files and the graphics files) to be put into a single
	// .JAR
	// file and then loaded and run directly from that (executable) file; in
	// addition,
	// a benefit of using the 'ImageIcon' class is that, unlike some of the
	// other
	// file-loading classes, the 'ImageIcon' class fully loads the Image when
	// the
	// object is created, making it possible to immediately determine and use
	// the
	// dimensions of the Image
	private ArrayList<ImageIcon> playerImages = new ArrayList<ImageIcon>();
	
	private ImageIcon tile = new ImageIcon(getClass().getResource("testing.png"));
	private ImageIcon player = new ImageIcon(getClass().getResource("testing.png"));

	private JLabel lblPlayer = new JLabel(player);
	private int playerX, playerY, playerDir = 270;

	private boolean pressedLeft = false, pressedRight = false, pressedSpace = false, pressedUp = false,
			pressedDown = false;
	private boolean controlKeyPressed = false;

	private JLabel pause = new JLabel("Game Paused");
	private Font aFont = new Font("Helvetica", Font.BOLD, 24);
	private int textWidth = pause.getFontMetrics(aFont).stringWidth(pause.getText());

	// Create ArrayLists to hold the 'Alien' objects (all types) and the
	// 'Missile'
	// objects that will be used throughout the game
	private ArrayList<Tile> tiles = new ArrayList<Tile>();

	private Font fonto = new Font("Arial", Font.BOLD, 32);

	private boolean soundOn = true;

	public static void main(String[] args) {
		new Game();
	}
	
	public Game() {
//		for (int i = 0; i < 10; i++) {
//			playerImages.add(new ImageIcon(getClass().getResource("player" + i + ".png")));
//		}
		
		System.out.println("testing");
	}
}
